import{s as Gs,a as ys,e as js,n as Ks}from"../chunks/scheduler.Csg792vZ.js";import{S as Os,i as Qs,k as Es,l as Ds,m as us,n as vs,o as ds,p as Cs,e as a,s as p,H as Ws,t as qs,c as F,q as r,f as o,r as Xs,a as Is,b as Vs,d as t,u as V,g as n,h as zs}from"../chunks/index.htsGj4VD.js";import{P as Ys,g as sl,a as Us}from"../chunks/post_layout.D9iBft6w.js";import{I as Zs}from"../chunks/post_card.G6Xi9pPQ.js";function ll(j){let e,u='<a href="#モチベーション">モチベーション</a>',E,y,c='最近 <a href="https://rhai.rs/" rel="nofollow noopener noreferrer external" target="_blank">Rhai</a> という Rust で動作するスクリプトエンジンを見つけました。',i,D,_s="ゲーム開発向けにライブラリの作成を検討していて、当初は目的のライブラリそのものを Cython(Python)で作成しようと考えていたものの、モバイル向けにポーティングするには numpy などのパッケージ導入のハードルが高いことがわかり、断念していました。",z,f,fs="最終的に Rust を使うことに決めたのですが、スクリプトエンジンがあるとは知らなかったので嬉しい誤算です。",U,A,As="また、Rhai は AST(abstract syntax tree) というコードをパースした結果を Rust で取得することができます。これを再利用することでパースの時間を省略し、高速にスクリプトを実行できるという利点があります。",Z,m,ms="そこで、当然ながらどれほどの速度差があるのか気になりましたので、ベンチマークを取ってみました。",J,v,hs='<a href="#結果">結果</a>',N,h,xs='テストコードおよび結果はこちらのリポジトリにあります。<br/> <a href="https://github.com/Nagitch/benchmark-rust-rhai" rel="nofollow noopener noreferrer external" target="_blank">Benchmark Rust Rhai</a>',G,x,Rs=`フィボナッチ数列を n 回計算するという単純な処理を行い、その時間を計測しました。
主要な部分の抜粋は以下。`,K,q,Ns=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" rust="true"><div class="language-id">rust</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> engine </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Engine</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">new</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> script </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #C3E88D">        fn fibonacci(n) &#123;</span></div><div class='line'><span style="color: #C3E88D">            if n &lt;= 1 </span><span style="color: #89DDFF">&#123;</span><span style="color: #C3E88D"> return n; </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #C3E88D">            else </span><span style="color: #89DDFF">&#123;</span><span style="color: #C3E88D"> return fibonacci(n-1) + fibonacci(n-2); </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #C3E88D">        &#125;</span></div><div class='line'><span style="color: #C3E88D">        fibonacci(n)</span></div><div class='line'><span style="color: #C3E88D">    </span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">mut</span><span style="color: #EEFFFF"> rust_times </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Vec</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">new</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">mut</span><span style="color: #EEFFFF"> direct_times </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Vec</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">new</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">mut</span><span style="color: #EEFFFF"> ast_times </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Vec</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">new</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">mut</span><span style="color: #EEFFFF"> ns </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Vec</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">new</span><span style="color: #89DDFF">();</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> n </span><span style="color: #F78C6C">in</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">1</span><span style="color: #FFCB6B">i64</span><span style="color: #89DDFF">..=</span><span style="color: #F78C6C">10</span><span style="color: #FFCB6B">i64</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        ns</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">n</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">mut</span><span style="color: #EEFFFF"> scope </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Scope</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">new</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        scope</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">n</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> n</span><span style="color: #89DDFF">);</span></div><div class='line'></div><div class='line'><span style="color: #546E7A">        // Rust (vanilla)</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> start </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Instant</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">now</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> _rust_result </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">fibonacci</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">n </span><span style="color: #F78C6C">as</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">i64</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> rust_duration </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> start</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">elapsed</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">as_secs_f64</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        rust_times</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">rust_duration</span><span style="color: #89DDFF">);</span></div><div class='line'></div><div class='line'><span style="color: #546E7A">        // Rhai (direct)</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> start </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Instant</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">now</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> _direct_result</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">i64</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> engine</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval_with_scope</span><span style="color: #89DDFF">(&</span><span style="color: #C792EA">mut</span><span style="color: #EEFFFF"> scope</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> script</span><span style="color: #89DDFF">)?;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> direct_duration </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> start</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">elapsed</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">as_secs_f64</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        direct_times</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">direct_duration</span><span style="color: #89DDFF">);</span></div><div class='line'></div><div class='line'><span style="color: #546E7A">        // Rhai (AST)</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> ast </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> engine</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">compile_with_scope</span><span style="color: #89DDFF">(&</span><span style="color: #C792EA">mut</span><span style="color: #EEFFFF"> scope</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> script</span><span style="color: #89DDFF">)?;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> start </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Instant</span><span style="color: #89DDFF">::</span><span style="color: #82AAFF">now</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> _ast_result</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">i64</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> engine</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval_ast_with_scope</span><span style="color: #89DDFF">(&</span><span style="color: #C792EA">mut</span><span style="color: #EEFFFF"> scope</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&</span><span style="color: #EEFFFF">ast</span><span style="color: #89DDFF">)?;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> ast_duration </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> start</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">elapsed</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">as_secs_f64</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">        ast_times</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">ast_duration</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,I,R,Bs="私が docker-compose で走らせた結果は以下の通りでした。",O,B,rs,T,Q,H,cs,w,W,d,Ts='<a href="#考察">考察</a>',X,$,Hs=`前提として、当然ながら PC のスペックによって処理時間は変わるため、Rust(=Vanilla)をベースに相対的な速度を比較して評価します。
結果としては以下のことが考察できます。`,Y,b,ws="<li>無論、Rust が最速である</li> <li>Rhai(Direct)の初回の実行が遅い<ul><li>これはスクリプトエンジンの初回の evaluate に時間がかかるためと思われる（面倒なので未検証）</li></ul></li> <li>Rhai(AST) は Rhai(direct)より早い。スクリプトが複雑になるほど恩恵があると予想できる</li> <li>イテレーションが進むにつれて、Rust と Rhai(Direct, AST) の差が指数関数的に広がっていく<ul><li>ごく一般的な話ではあるが、スクリプトで行う処理は短いほうが良い。特に反復的な処理。</li></ul></li> <li>イテレーション 30 で Rhai(Direct, AST) が 830ms 程度に対して、Rust が約 1.5ms （出力した HTML だとポイントごとのデータが見れる）だった。<ul><li>1/500 程度の差がある(=Rust が 500 倍速い)ということになる。アプリケーションで Rhai がボトルネックになっていると特定できた場合、500 倍の速度向上が見込めると予想できる。</li></ul></li>",ss,C,$s='<a href="#所感">所感</a>',ls,P,bs="スクリプトエンジンを搭載する利点は JS, Python よろしくランタイムでプログラミングできることです。",ts,L,Ps="Rhai ではこの柔軟性を持ちながら、もしボトルネックになるような処理があれば Rust で書き直すことで高速化が見込めるという利点があります。",ns,M,Ls="今まででも、例えば Python と Cython, C++の組み合わせにより同等のことは可能ではありますが、スムーズさや移植性の点で Rust と Rhai の組み合わせは魅力的だと感じました。",es,k,Ms="また、AST を取得することでスクリプトのパース時間を省略できる機能もなるほどという感じです。これはスクリプトが複雑になるほど恩恵があると予想されるため、ぜひ活用したいと思いました。",as,S,ks=`まだまだ研究中ですが、開発全般のワークフローを効率化できる余地がありそうです。
何かと機会があれば実際のアプリ開発に取り入れてみたいと思っています。`,ps,_,Ss='<a href="#更新履歴">更新履歴</a>',Fs,g,gs="<li>2024-07-06: 初稿</li>",os;return T=new Zs({props:{src:"benchmark-result.png",alt:"result n=10"}}),w=new Zs({props:{src:"benchmark-result-n30.png",alt:"result n=30"}}),{c(){e=a("h2"),e.innerHTML=u,E=p(),y=a("p"),y.innerHTML=c,i=p(),D=a("p"),D.textContent=_s,z=p(),f=a("p"),f.textContent=fs,U=p(),A=a("p"),A.textContent=As,Z=p(),m=a("p"),m.textContent=ms,J=p(),v=a("h2"),v.innerHTML=hs,N=p(),h=a("p"),h.innerHTML=xs,G=p(),x=a("p"),x.textContent=Rs,K=p(),q=new Ws(!1),I=p(),R=a("p"),R.textContent=Bs,O=p(),B=a("p"),rs=qs(`n=10
`),Es(T.$$.fragment),Q=p(),H=a("p"),cs=qs(`n=30
`),Es(w.$$.fragment),W=p(),d=a("h2"),d.innerHTML=Ts,X=p(),$=a("p"),$.textContent=Hs,Y=p(),b=a("ul"),b.innerHTML=ws,ss=p(),C=a("h2"),C.innerHTML=$s,ls=p(),P=a("p"),P.textContent=bs,ts=p(),L=a("p"),L.textContent=Ps,ns=p(),M=a("p"),M.textContent=Ls,es=p(),k=a("p"),k.textContent=Ms,as=p(),S=a("p"),S.textContent=ks,ps=p(),_=a("h2"),_.innerHTML=Ss,Fs=p(),g=a("ul"),g.innerHTML=gs,this.h()},l(s){e=F(s,"H2",{id:!0,"data-svelte-h":!0}),r(e)!=="svelte-8rkzn7"&&(e.innerHTML=u),E=o(s),y=F(s,"P",{"data-svelte-h":!0}),r(y)!=="svelte-wjqn70"&&(y.innerHTML=c),i=o(s),D=F(s,"P",{"data-svelte-h":!0}),r(D)!=="svelte-1w32b4o"&&(D.textContent=_s),z=o(s),f=F(s,"P",{"data-svelte-h":!0}),r(f)!=="svelte-hti5ix"&&(f.textContent=fs),U=o(s),A=F(s,"P",{"data-svelte-h":!0}),r(A)!=="svelte-4pq0pn"&&(A.textContent=As),Z=o(s),m=F(s,"P",{"data-svelte-h":!0}),r(m)!=="svelte-13x9jxe"&&(m.textContent=ms),J=o(s),v=F(s,"H2",{id:!0,"data-svelte-h":!0}),r(v)!=="svelte-fafifk"&&(v.innerHTML=hs),N=o(s),h=F(s,"P",{"data-svelte-h":!0}),r(h)!=="svelte-1hjg79l"&&(h.innerHTML=xs),G=o(s),x=F(s,"P",{"data-svelte-h":!0}),r(x)!=="svelte-4pbjju"&&(x.textContent=Rs),K=o(s),q=Xs(s,!1),I=o(s),R=F(s,"P",{"data-svelte-h":!0}),r(R)!=="svelte-xs83js"&&(R.textContent=Bs),O=o(s),B=F(s,"P",{});var l=Is(B);rs=Vs(l,`n=10
`),Ds(T.$$.fragment,l),l.forEach(t),Q=o(s),H=F(s,"P",{});var is=Is(H);cs=Vs(is,`n=30
`),Ds(w.$$.fragment,is),is.forEach(t),W=o(s),d=F(s,"H2",{id:!0,"data-svelte-h":!0}),r(d)!=="svelte-1lpwza2"&&(d.innerHTML=Ts),X=o(s),$=F(s,"P",{"data-svelte-h":!0}),r($)!=="svelte-1o32pvg"&&($.textContent=Hs),Y=o(s),b=F(s,"UL",{"data-svelte-h":!0}),r(b)!=="svelte-1ua5eru"&&(b.innerHTML=ws),ss=o(s),C=F(s,"H2",{id:!0,"data-svelte-h":!0}),r(C)!=="svelte-bzjrrp"&&(C.innerHTML=$s),ls=o(s),P=F(s,"P",{"data-svelte-h":!0}),r(P)!=="svelte-1vehwsv"&&(P.textContent=bs),ts=o(s),L=F(s,"P",{"data-svelte-h":!0}),r(L)!=="svelte-3ytwo6"&&(L.textContent=Ps),ns=o(s),M=F(s,"P",{"data-svelte-h":!0}),r(M)!=="svelte-68ku6r"&&(M.textContent=Ls),es=o(s),k=F(s,"P",{"data-svelte-h":!0}),r(k)!=="svelte-zlsqw2"&&(k.textContent=Ms),as=o(s),S=F(s,"P",{"data-svelte-h":!0}),r(S)!=="svelte-e76dhe"&&(S.textContent=ks),ps=o(s),_=F(s,"H2",{id:!0,"data-svelte-h":!0}),r(_)!=="svelte-mck5y1"&&(_.innerHTML=Ss),Fs=o(s),g=F(s,"UL",{"data-svelte-h":!0}),r(g)!=="svelte-1hqnnpc"&&(g.innerHTML=gs),this.h()},h(){V(e,"id","モチベーション"),V(v,"id","結果"),q.a=I,V(d,"id","考察"),V(C,"id","所感"),V(_,"id","更新履歴")},m(s,l){n(s,e,l),n(s,E,l),n(s,y,l),n(s,i,l),n(s,D,l),n(s,z,l),n(s,f,l),n(s,U,l),n(s,A,l),n(s,Z,l),n(s,m,l),n(s,J,l),n(s,v,l),n(s,N,l),n(s,h,l),n(s,G,l),n(s,x,l),n(s,K,l),q.m(Ns,s,l),n(s,I,l),n(s,R,l),n(s,O,l),n(s,B,l),zs(B,rs),us(T,B,null),n(s,Q,l),n(s,H,l),zs(H,cs),us(w,H,null),n(s,W,l),n(s,d,l),n(s,X,l),n(s,$,l),n(s,Y,l),n(s,b,l),n(s,ss,l),n(s,C,l),n(s,ls,l),n(s,P,l),n(s,ts,l),n(s,L,l),n(s,ns,l),n(s,M,l),n(s,es,l),n(s,k,l),n(s,as,l),n(s,S,l),n(s,ps,l),n(s,_,l),n(s,Fs,l),n(s,g,l),os=!0},p:Ks,i(s){os||(vs(T.$$.fragment,s),vs(w.$$.fragment,s),os=!0)},o(s){ds(T.$$.fragment,s),ds(w.$$.fragment,s),os=!1},d(s){s&&(t(e),t(E),t(y),t(i),t(D),t(z),t(f),t(U),t(A),t(Z),t(m),t(J),t(v),t(N),t(h),t(G),t(x),t(K),q.d(),t(I),t(R),t(O),t(B),t(Q),t(H),t(W),t(d),t(X),t($),t(Y),t(b),t(ss),t(C),t(ls),t(P),t(ts),t(L),t(ns),t(M),t(es),t(k),t(as),t(S),t(ps),t(_),t(Fs),t(g)),Cs(T),Cs(w)}}}function tl(j){let e,u;const E=[j[0],Js];let y={$$slots:{default:[ll]},$$scope:{ctx:j}};for(let c=0;c<E.length;c+=1)y=ys(y,E[c]);return e=new Ys({props:y}),{c(){Es(e.$$.fragment)},l(c){Ds(e.$$.fragment,c)},m(c,i){us(e,c,i),u=!0},p(c,[i]){const D=i&1?sl(E,[i&1&&Us(c[0]),i&0&&Us(Js)]):{};i&2&&(D.$$scope={dirty:i,ctx:c}),e.$set(D)},i(c){u||(vs(e.$$.fragment,c),u=!0)},o(c){ds(e.$$.fragment,c),u=!1},d(c){Cs(e,c)}}}const Js={title:"Rust / Rhai / Rhai(AST)の速度比較ベンチマーク",created:"2024-07-06T00:00:00.000Z",updated:"2024-07-06T00:00:00.000Z",tags:["Rust","Rhai","プログラミング","ベンチマーク"],images:[],slug:"/blog/rust-rhai-benchmark/+page.svelte.md",path:"/blog/rust-rhai-benchmark",toc:[{depth:2,slug:"モチベーション",title:"モチベーション"},{depth:2,slug:"結果",title:"結果"},{depth:2,slug:"考察",title:"考察"},{depth:2,slug:"所感",title:"所感"},{depth:2,slug:"更新履歴",title:"更新履歴"}]};function nl(j,e,u){return j.$$set=E=>{u(0,e=ys(ys({},e),js(E)))},e=js(e),[e]}class ol extends Os{constructor(e){super(),Qs(this,e,nl,tl,Gs,{})}}export{ol as component};
