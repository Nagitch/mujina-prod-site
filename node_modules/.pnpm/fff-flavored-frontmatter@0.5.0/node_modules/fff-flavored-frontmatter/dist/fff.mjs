// lib/utils.ts
var typeDiscovery = (fm) => {
  if (fm.rsvp && ["yes", "no", "maybe", "interested"].includes(fm.rsvp.toLowerCase()))
    return "rsvp";
  else if (fm.bookmark_of && new URL(fm.bookmark_of))
    return "bookmark";
  else if (fm.repost_of && new URL(fm.repost_of))
    return "repost";
  else if (fm.like_of && new URL(fm.like_of))
    return "like";
  else if (fm.in_reply_to && new URL(Array.isArray(fm.in_reply_to) ? fm.in_reply_to[0] : fm.in_reply_to))
    return "reply";
  else if (fm.video)
    return "video";
  else if (fm.audio)
    return "audio";
  else if (fm.title)
    return "article";
  else if (fm.images)
    return "photo";
  else
    return "note";
};
var toJSONFeedItem = (fm) => ({
  title: fm.title,
  summary: fm.summary,
  image: fm.images ? typeof fm.images[0] === "string" ? fm.images[0] : fm.images[0].src : void 0,
  date_published: fm.published ?? fm.created,
  date_modified: fm.updated,
  authors: fm.authors,
  tags: fm.tags,
  language: fm.lang,
  _indieweb: {
    type: typeDiscovery(fm),
    syndication: fm.syndication,
    "in-reply-to": fm.in_reply_to,
    "bookmark-of": fm.bookmark_of,
    "repost-of": fm.repost_of,
    "like-of": fm.like_of
  }
});
export {
  toJSONFeedItem,
  typeDiscovery
};
